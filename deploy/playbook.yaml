---
- hosts: all
  gather_facts: no
  tasks:
    - name: Wait for ssh
      # give it some time as the VM may take a while to start
      wait_for_connection:
        delay: 30
        timeout: 600

- hosts: all
  become: yes
  gather_facts: yes
  roles:
    - role: "grycap.motley_cue"
      ssh_oidc_other_vos_name: cloud.egi.eu
      ssh_oidc_other_vos_role: auditor

- hosts: all
  become: yes
  gather_facts: yes
  tasks:
    - name: Disable default site in nginx
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Move motley-cue to a different port (nginx)
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/nginx.motley_cue
        regexp: ".*listen 8080;$"
        line: "    listen 8181;"

    - name: No IPv6 for motley-cue (nginx)
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/nginx.motley_cue
        search_string: "listen [::]:8080;"
        state: absent

    - name: Move motley-cue to a different port (pam-ssh-oidc)
      ansible.builtin.lineinfile:
        path: /etc/pam.d/pam-ssh-oidc-config.ini
        regexp: "^verify_endpoint = http://localhost:8080/verify_user$"
        line: "verify_endpoint = http://localhost:8181/verify_user"

    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
        enabled: yes

    - name: Restart motley-cue
      ansible.builtin.service:
        name: motley-cue
        state: restarted
        enabled: yes

    - name: Checkout repo at VM
      ansible.builtin.git:
        repo: 'https://github.com/EGI-Federation/cloud-info-api.git'
        version: "{{ git_ref }}"
        dest: /cloud-info-api

    - name: env file
      ansible.builtin.copy:
        content: |
          API_HOSTNAME="is.ops.fedcloud.eu"
          TAG="sha-{{ git_ref[0:7] }}"
          OPS_PORTAL_TOKEN="{{ ops_portal_token }}"
        dest: /cloud-info-api/.env

    - name: service file
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Dashboard
          After=docker.service
          Requires=docker.service

          [Service]
          Type=oneshot
          RemainAfterExit=true
          WorkingDirectory=/cloud-info-api
          ExecStart=/usr/bin/docker-compose up -d --force-recreate --remove-orphans
          ExecStop=/usr/bin/docker-compose down

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/cloud-info-api.service

    - name: Run, baby run
      ansible.builtin.systemd:
        name: cloud-info-api.service
        enabled: yes
        state: restarted
        daemon_reload: yes
